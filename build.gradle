defaultTasks 'clean', 'test', 'aggregate'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "net.serenity-bdd:serenity-gradle-plugin:3.3.0"
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "net.serenity-bdd.serenity-gradle-plugin"

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    serenityVersion = '3.9.4'
    serenityCucumberVersion = '3.9.4'
}

dependencies {
    implementation "net.serenity-bdd:serenity-junit:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-core:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityVersion}"
    implementation 'org.seleniumhq.selenium:selenium-java:4.0.0'
    testImplementation "net.serenity-bdd:serenity-cucumber:${serenityCucumberVersion}"
    implementation group: 'net.serenity-bdd', name: 'serenity-screenplay-rest', version: "${serenityVersion}"
    implementation group: 'net.serenity-bdd', name: 'serenity-ensure', version:"${serenityVersion}"
    testImplementation 'junit:junit:4.13.2'
    compileOnly('org.projectlombok:lombok:1.18.28')
    annotationProcessor('org.projectlombok:lombok:1.18.28')
    testCompileOnly('org.projectlombok:lombok:1.18.28')
    testAnnotationProcessor('org.projectlombok:lombok:1.18.28')
    implementation "com.google.code.gson:gson:2.8.9"
    testImplementation "org.assertj:assertj-core:3.23.1"

    // Dependencias de Log4j 2
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    // Dependencia opcional para la integraci√≥n con SLF4J
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'
}

serenity {
    // Specify the root package of any JUnit acceptance tests to appear in the Serenity report
    testRoot = "src/test/java"
    // Specify the root directory of any Cucumber feature files
    requirementsDir = "src/test/resources/features"
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.withType(Test).configureEach {
    testLogging.showStandardStreams = true
    systemProperties = System.properties as Map<String, ?>
}

gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)